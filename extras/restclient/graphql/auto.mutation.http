### Einloggen in der Rolle "admin", "mitarbeiter" und "kunde"
// @name login
POST {{graphQlUrl}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(username: "admin", password: "p") { token expiresIn roles }
}

### Einloggen in der Rolle "mitarbeiter" und "kunde"
// @name login
POST {{graphQlUrl}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(username: "alfred.alpha", password: "p") { token expiresIn roles }
}

### Einloggen in der Rolle "kunde"
// @name login
POST {{graphQlUrl}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(username: "dirk.delta", password: "p") { token expiresIn roles }
}

### Einloggen mit falschem Passwort
// @name login
POST {{graphQlUrl}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  login(username: "admin", password: "FALSCH") { token expiresIn roles }
}

### Neues Auto anlegen
POST {{graphQlUrl}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.login.token}}
X-REQUEST-TYPE: GraphQL

mutation {
  create(
    input: {
      modell: "Testgraphql",
      ps: 1,
      art: ELEKTRO,
      hersteller: AUDI,
      preis: 99.9,
      rabatt: 0.1,
      lieferbar: true,
      datum: "2022-01-31",
      modellnummer: "3897225832",
      homepage: "http://test.de/",
      kategorien: ["KOMBI"]
    }
  )
}

### Neues Auto mit ungueltigen Daten anlegen
POST {{graphQlUrl}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.login.token}}
X-REQUEST-TYPE: GraphQL

mutation {
  create(
    input: {
      modell: "?!$",
      ps: 999,
      art: ELEKTRO,
      hersteller: AUDI,
      preis: -999,
      rabatt: 999,
      lieferbar: true,
      datum: "123",
      modellnummer: "123",
      homepage: "?!$",
      kategorien: ["KOMBI"]
    }
  )
}

### Vorhandenes Auto aktualisieren
POST {{graphQlUrl}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.login.token}}
X-REQUEST-TYPE: GraphQL

mutation {
  update(
    input: {
      id: "00000000-0000-0000-0000-000000000003",
      version: 0,
      modell: "Geaendertgraphql",
      ps: 5,
      art: VERBRENNER,
      hersteller: AUDI,
      preis: 99.99,
      rabatt: 0.099,
      lieferbar: false,
      datum: "2022-02-01",
      modellnummer: "9780201633610",
      homepage: "https://test.graphql/"
    }
  )
}

### Vorhandenes Auto mit ungueltigen Werten aktualisieren
POST {{graphQlUrl}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.login.token}}
X-REQUEST-TYPE: GraphQL

mutation {
  update(
    input: {
      id: "00000000-0000-0000-0000-000000000003",
      version: 0,
      modell: "?!$",
      ps: 999,
      art: ELEKTRO,
      hersteller: AUDI,
      preis: -999,
      rabatt: 999,
      lieferbar: false,
      datum: "123",
      modellnummer: "123",
      homepage: "?!$"
    }
  )
}

### Nicht-Vorhandenes Auto aktualisieren
POST {{graphQlUrl}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.login.token}}
X-REQUEST-TYPE: GraphQL

mutation {
  update(
    input: {
      id: "99999999-9999-9999-9999-999999999999",
      version: 0,
      modell: "Nichtvorhanden",
      ps: 5,
      art: VERBRENNER,
      hersteller: AUDI,
      preis: 99.99,
      rabatt: 0.099,
      lieferbar: false,
      datum: "2022-02-01",
      modellnummer: "9780201633610",
      homepage: "https://test.de/"
    }
  )
}

### Vorhandenes Auto loeschen
POST {{graphQlUrl}}
Content-Type: application/json
Authorization: Bearer {{login.response.body.$.data.login.token}}
X-REQUEST-TYPE: GraphQL

mutation {
  delete(id: "00000000-0000-0000-0000-000000000060")
}
