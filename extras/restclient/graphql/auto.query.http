### Suche id, modell, art und version von allen Autos
POST {{graphQlUrl}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

{
  autos {
    id
    modell
    art
    version
  }
}

### Suche modell, art, modellnummer und version von einem Auto mit vorhandener Auto-ID
POST {{graphQlUrl}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query ($id: ID! = "00000000-0000-0000-0000-000000000001") {
  auto(id: $id) {
    modell
    art
    modellnummer
    version
  }
}

{
  "id": "00000000-0000-0000-0000-000000000001"
}

### Suche modell von einem Auto mit nicht-vorhandener Auto-ID
POST {{graphQlUrl}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query ($id: ID! = "99999999-9999-9999-9999-999999999999") {
  auto(id: $id) {
    modell
  }
}

{
  "id": "99999999-9999-9999-9999-999999999999"
}

### Suche art von Autosn mit vorhandenem Modell
POST {{graphQlUrl}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query ($modell: String = "Alpha") {
  autos(modell: $modell) {
    art
  }
}

{
  "modell": "Alpha"
}

### Suche modell, art und kategorien von Autosn mit vorhandenem Modell
POST {{graphQlUrl}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query ($modell: String = "a") {
  autos(modell: $modell) {
    modell
    art
    kategorien
  }
}

{
  "modell": "a"
}

### Suche art von Autosn mit NICHT-vorhandenem Modell
POST {{graphQlUrl}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query ($modell: String = "Nichtvorhanden") {
  autos(modell: $modell) {
    art
  }
}

{
  "modell": "Nichtvorhanden"
}
